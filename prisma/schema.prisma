
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role{
  USER
  CONSULTANT
}

model Account {
  id           String      @id @default(cuid())
  email        String      @unique
  name         String
  role         Role
  user         User?       @relation(fields: [userId], references: [id])
  userId       String?      @unique
  consultant   Consultant? @relation(fields: [consultantId], references: [id])
  consultantId String?    @unique
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model User {
  id        String    @id @default(cuid())
  name      String  
  email        String   @unique
  password     String
  accounts  Account[]
  project   Project[]
}

model Consultant {
  id         String    @id @default(cuid())
  name       String
  email        String @unique
  password     String
  accounts   Account[]
  uniqueId   String    @unique @default(cuid())
  project   Project[]
}


model Project{
  id          Int       @id @default(autoincrement())
  name        String
  type        String
  numFloors   Int?
  userId      String 
  projectnumber Int @unique
  consultantId String?
  address     String 
  floors      ProjectFloor[]
  createdAt   DateTime  @default(now())
  modified    Boolean   @default(false)
  status      Status    @default(NEW)
  user        User      @relation(fields: [userId] , references: [id])
 consultant Consultant? @relation(fields: [consultantId], references: [uniqueId])
} 

model ProjectFloor{
  id            Int         @id @default(autoincrement())
  floornumber   Int? 
  description   String?
  raw_img       String?   @default("")
  user_marked_img    String?   @default("")
  user_annotated_img String?    @default("")
  final_marked_img    String?   @default("")
  final_annotated_img String?    @default("")
  marked_compass_angle Int?   
  marked_indicator_angle Int?
  projectId     Int
  report        Json?
  modified      Boolean?  @default(false)
  annotations  Annotations[]
  project       Project     @relation(fields: [projectId] , references: [id] , onDelete: Cascade)
}

model Annotations{
  id Int @id @default(autoincrement())
  projectfloor  Int
  projectFloor ProjectFloor @relation(fields: [projectfloor], references: [id])
  note String
  start Int
  end Int
  text String
  orientation String
  startX Int
  startY Int
  width Int
  height Int
}


model Assets {
  // asset_id    Int @id @default(autoincrement())
  asset_name  String  @id @unique
  asset_info  AssetData[]
}

model AssetData {
  id          Int        @id @default(autoincrement())
  asset_name  String 
  direction   String
  remedy      String?
  impact      String?
  asset       Assets     @relation(fields: [asset_name],references: [asset_name])

  @@unique([asset_name , direction])
}

enum Status{
  NEW
  SUBMITTED
  REVIEWING
  COMPLETED
}